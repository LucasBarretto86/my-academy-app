services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: my-academy-api_c
    depends_on:
      - redis
      - elasticsearch
    env_file:
      - .env.development
    ports:
      - "3000:3000"
    volumes:
      - .:/rails
      - ./db:/rails/db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    container_name: my-academy-app_c
    env_file:
      - ./frontend/.env
    environment:
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./frontend:/app
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis_volume_data:/data
    networks:
      - app-network
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://elasticsearch:9200"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

networks:
  app-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  redis_volume_data:
  db:
